services:
  backend:
    user: root
    build:
      context: ./backend
      args:
        - DEV=true
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/app
    command: >
      sh -c "python manage.py wait_for_db &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true

  nginx:
    build:
      context: ./nginx
    platform: linux/amd64
    volumes:
      - backend:/backend
      - ./frontend/dist:/var/www/frontend # for production
    ports:
      - '80:80'
    depends_on:
      - backend
      - frontend

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

volumes:
  dev-db-data:
  backend:
  frontend:
